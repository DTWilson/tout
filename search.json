[{"path":"https://dtwilson.github.io/tout/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 TOut authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dtwilson.github.io/tout/articles/tout.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Three-outcome clinical trial design (tout)","text":"Early phase clinical trials typically employ hypothesis test primary analysis, test two possible outcomes: either go next stage evaluation (e.g. large phase III trial), stop development. testing framework decisions correspond rejection null hypothesis, failure reject , respectively. authors suggested phase II drug trials can extend approach allow third intermediate outcome, pause observe data bad warrant immediate stop, good warrant immediate go. similar approach common pilot trials complex interventions. settings, mechanics : compute estimate ρ̂\\hat{\\rho} parameter interest, ρ\\rho, compare two thresholds, x0x_0 x1x_1, Decision={go ρ̂≥x1pause x0<ρ̂<x1stop ρ̂<x0.\\begin{equation}\\label{eqn:three_outcome} \\text{Decision} =  \\begin{cases} \\text{go} & \\text{ } \\hat{\\rho} \\geq x_1 \\\\ \\text{pause} & \\text{ } x_0 < \\hat{\\rho} < x_1 \\\\ \\text{stop} & \\text{ } \\hat{\\rho} < x_0. \\\\ \\end{cases} \\end{equation} tout package lets us determine optimal values decision thresholds x0x_0 x1x_1 sample size nn. particular, find smallest possible trial satisfy constraints following three operating characteristics: α\\alpha, probability proceeding main trial ρ≤ρ0\\rho \\leq \\rho_0; β\\beta, probability proceeding main trial ρ≥ρ1\\rho \\geq \\rho_1; γ\\gamma, probability making immediate stop go decision ρ=(ρ0+ρ1)/2\\rho = (\\rho_0 + \\rho_1)/2.","code":""},{"path":"https://dtwilson.github.io/tout/articles/tout.html","id":"a-simple-example","dir":"Articles","previous_headings":"","what":"A simple example","title":"Three-outcome clinical trial design (tout)","text":"Suppose parameter interest, ρ\\rho, probability adherence intervention arm pilot trial. Suppose null alternative hypotheses ρ0=0.5\\rho_0 = 0.5 ρ1=0.7\\rho_1 = 0.7, respectively. Using typical type II error constraints, α≤0.05\\alpha \\leq 0.05 β≤0.2\\beta \\leq 0.2, can find smallest design ensure probability least 1−γ=0.51 - \\gamma = 0.5 obtain pause decision true parameter value midway null alternative hypotheses: can visualise sampling distribution test statistic hypothesis, highlighting decisions made:","code":"design <- tout_design(rho_0 = 0.5, rho_1 = 0.7, alpha_nom = 0.05, beta_nom  = 0.2, gamma_nom = 0.5)  design #> Three-outcome design #>  #> Sample size: 66  #> Decision thresholds: 38 44  #>  #> alpha = 0.04488955  #> beta = 0.1703036  #> gamma = 0.496394  #>  #> Hypotheses: 0.5 (null), 0.7 (alternative) #> Modification effect range: 0 0  #> Error probability following an intermediate result: 0.5 0.5 plot(design)"},{"path":"https://dtwilson.github.io/tout/articles/tout.html","id":"making-decisions-following-a-pause-outcome","dir":"Articles","previous_headings":"","what":"Making decisions following a pause outcome","title":"Three-outcome clinical trial design (tout)","text":"testing framework employed tout acknowledges final stop/go decision must made following pause outcome, factors calculation error rates. requires assumption well decisions made; particular, must estimate probabilities incorrectly go ρ≤ρ0\\rho \\leq \\rho_0 (denoted η0\\eta_0), incorrectly stop ρ≥ρ1\\rho \\geq \\rho_1 (denoted η1\\eta_1). default, tout_design() assumes η0=η1=0.5\\eta_0 = \\eta_1 = 0.5, can change wish:","code":"design <- tout_design(rho_0 = 0.5, rho_1 = 0.7, alpha_nom = 0.05, beta_nom  = 0.2, gamma_nom = 0.5, eta_0 = 0.3, eta_1 = 0.4)  design #> Three-outcome design #>  #> Sample size: 46  #> Decision thresholds: 26 31  #>  #> alpha = 0.0492724  #> beta = 0.1830351  #> gamma = 0.4863821  #>  #> Hypotheses: 0.5 (null), 0.7 (alternative) #> Modification effect range: 0 0  #> Error probability following an intermediate result: 0.3 0.4"},{"path":"https://dtwilson.github.io/tout/articles/tout.html","id":"making-adjustments-following-a-pause-outcome","dir":"Articles","previous_headings":"","what":"Making adjustments following a pause outcome","title":"Three-outcome clinical trial design (tout)","text":"often anticipate making adjustments intervention /trial design following pause outcome, attempt improve parameter interest ensure subsequent trial successful. can incorporate tout can specify interval effect modification τ∈[τmin,τmax]\\tau \\[\\tau_{min}, \\tau_{max}]. example, suppose anticipate improvement adherence range τ∈[0.01,0.05]\\tau \\[0.01, 0.05]. optimal design ","code":"design <- tout_design(rho_0 = 0.5, rho_1 = 0.7, alpha_nom = 0.05, beta_nom  = 0.2, gamma_nom = 0.5, tau = c(0.01, 0.05))  design #> Three-outcome design #>  #> Sample size: 100  #> Decision thresholds: 55 63  #>  #> alpha = 0.04924659  #> beta = 0.1988391  #> gamma = 0.4732802  #>  #> Hypotheses: 0.5 (null), 0.7 (alternative) #> Modification effect range: 0.01 0.05  #> Error probability following an intermediate result: 0.5 0.5"},{"path":"https://dtwilson.github.io/tout/articles/tout.html","id":"designs-for-continuous-endpoints","dir":"Articles","previous_headings":"","what":"Designs for continuous endpoints","title":"Three-outcome clinical trial design (tout)","text":"default, tout_design() assumes binary endpoint. can find designs continuous endpoints supply (assumed known) standard deviation outcome via sigma argument. example, Note decision thresholds given scale z-statistic.","code":"design <- tout_design(rho_0 = 2, rho_1 = 5, alpha_nom = 0.05, beta_nom  = 0.2, gamma_nom = 0.5, sigma = 7, tau = c(1, 2), max_n = 500)  design #> Three-outcome design #>  #> Sample size: 179  #> Decision thresholds: -0.6286741 1.644913  #>  #> alpha = 0.05  #> beta = 0.2002572  #> gamma = 0.3147751  #>  #> Hypotheses: 2 (null), 5 (alternative) #> Standard deviation: 7  #> Modification effect range: 1 2  #> Error probability following an intermediate result: 0.5 0.5"},{"path":"https://dtwilson.github.io/tout/articles/tout.html","id":"further-details","dir":"Articles","previous_headings":"","what":"Further details","title":"Three-outcome clinical trial design (tout)","text":"case binary endpoint, three error rates formally defined : α=max[Pr(x1<ρ̂|ρ=ρ0),ηPr(x0<ρ̂≤x1|ρ=ρ0−τmin)+Pr(x1<ρ̂|ρ=ρ0−τmin)]β=Pr(ρ̂≤x0|ρ=ρ1−τmax)+ηPr(x0<ρ̂≤x1|ρ=ρ1−τmax)γ=Pr(ρ̂≤x0|ρ=[ρ0+ρ1−τmin−τmax]/2)+Pr(x1<ρ̂|ρ=[ρ0+ρ1−τmin−τmax]/2). \\begin{align} \\alpha =& \\max \\big[ \\Pr(x_1 < \\hat{\\rho} ~|~ \\rho = \\rho_0), ~\\eta \\Pr(x_0 < \\hat{\\rho} \\leq x_1 ~|~ \\rho = \\rho_0 - \\tau_{min}) \\nonumber \\\\ &+ \\Pr(x_1 < \\hat{\\rho} ~|~ \\rho = \\rho_0 - \\tau_{min}) \\big] \\\\ \\beta =& \\Pr(\\hat{\\rho} \\leq x_0 ~|~ \\rho = \\rho_1 - \\tau_{max}) + \\eta \\Pr(x_0 < \\hat{\\rho} \\leq x_1 ~|~ \\rho = \\rho_1 - \\tau_{max}) \\\\ \\gamma =& \\Pr(\\hat{\\rho} \\leq x_0 ~|~ \\rho = [\\rho_0 + \\rho_1 - \\tau_{min} - \\tau_{max}]/2) \\\\ &+ \\Pr(x_1 < \\hat{\\rho} ~|~ \\rho = [\\rho_0 + \\rho_1 - \\tau_{min} - \\tau_{max}]/2). \\end{align} Derivations given associated manuscript. case continuous endpoints follows, now considering test statistic z-statistic distribution Z∼N(ρ−ρ0σ2/n,1). Z \\sim N \\left( \\frac{\\rho - \\rho_0}{\\sqrt{\\sigma^2/n}}, 1 \\right). Given nn x1x_1, x0x_0 corresponding nominal constraint α\\alpha can found exactly. optimal x1x_1 determined numerically (using exhaustive search binary case optimize() continuous case) respect nominal constraint β\\beta. Finally, bisection search used find lowest nn satisfies nominal constraint γ\\gamma.","code":""},{"path":"https://dtwilson.github.io/tout/articles/tout.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Three-outcome clinical trial design (tout)","text":"Wilson, D.T., Hudson, E. & Brown, S. Three-outcome designs external pilot trials progression criteria. BMC Med Res Methodol 24, 226 (2024). https://doi.org/10.1186/s12874-024-02351-x","code":""},{"path":"https://dtwilson.github.io/tout/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Duncan Wilson. Author, maintainer, copyright holder.","code":""},{"path":"https://dtwilson.github.io/tout/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wilson D (2025). tout: Optimal Sample Size Progression Criteria Three-Outcome Trials. R package version 1.0.1, https://github.com/DTWilson/tout.","code":"@Manual{,   title = {tout: Optimal Sample Size and Progression Criteria for Three-Outcome Trials},   author = {Duncan Wilson},   year = {2025},   note = {R package version 1.0.1},   url = {https://github.com/DTWilson/tout}, }"},{"path":"https://dtwilson.github.io/tout/index.html","id":"tout-","dir":"","previous_headings":"","what":"Optimal Sample Size and Progression Criteria for Three-Outcome Trials","title":"Optimal Sample Size and Progression Criteria for Three-Outcome Trials","text":"goal tout optimise design three-outcome clinical trials determining sample size progression criteria.","code":""},{"path":"https://dtwilson.github.io/tout/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Optimal Sample Size and Progression Criteria for Three-Outcome Trials","text":"Install released version tout CRAN: can install development version tout GitHub :","code":"install.packages(\"tout\") # install.packages(\"devtools\") devtools::install_github(\"DTWilson/tout\")"},{"path":"https://dtwilson.github.io/tout/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Optimal Sample Size and Progression Criteria for Three-Outcome Trials","text":"Consider pilot trial measure proportion patients, intervention arm, adhere intervention. want use estimate probability adherence (denoted ρ\\rho) statistical test three possible outcomes: stop, go, pause (pause outcome allows us make progression decision outwith testing framework, based information /stakeholders). Let null alternative hypotheses ρ0=0.5\\rho_0 = 0.5 ρ1=0.7\\rho_1 = 0.7, suppose wish control error rates α≤0.05,β≤0.2\\alpha \\leq 0.05, \\beta \\leq 0.2 γ≤0.6\\gamma \\leq 0.6. can find smallest possible design satisfying constraints using tout_design() function: Plotting returned object gives illustration sampling distribution estimated adherence probability hypothesis, alongside optimal progression criteria decisions lead :  function can used anticipate making adjustments following pause outcome (see tau argument); assuming particular probabilities making correct decisions following pause outcome (see eta argument); outcome continuous rather binary (see sigma argument). details can found vignette associated manuscript.","code":"library(tout)  design <- tout_design(rho_0 = 0.5, rho_1 = 0.7, alpha_nom = 0.05, beta_nom = 0.2, gamma_nom = 0.6)  design #> Three-outcome design #>  #> Sample size: 57  #> Decision thresholds: 33 38  #>  #> alpha = 0.04808966  #> beta = 0.186012  #> gamma = 0.5433195  #>  #> Hypotheses: 0.5 (null), 0.7 (alternative) #> Modification effect range: 0 0  #> Error probability following an intermediate result: 0.5 0.5 plot(design)"},{"path":"https://dtwilson.github.io/tout/reference/plot.tout.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot sampling distributions of three-outcome designs — plot.tout","title":"Plot sampling distributions of three-outcome designs — plot.tout","text":"Takes object class tout plots sampling distributions null alternative hypotheses, highlighting portions correspond stop, pause, go outcomes.","code":""},{"path":"https://dtwilson.github.io/tout/reference/plot.tout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot sampling distributions of three-outcome designs — plot.tout","text":"","code":"# S3 method for class 'tout' plot(x, ...)"},{"path":"https://dtwilson.github.io/tout/reference/plot.tout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot sampling distributions of three-outcome designs — plot.tout","text":"x object class tout produced tout_design(). ... arguments passed methods.","code":""},{"path":"https://dtwilson.github.io/tout/reference/print.tout.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a tout object — print.tout","title":"Print a tout object — print.tout","text":"default print method tout object.","code":""},{"path":"https://dtwilson.github.io/tout/reference/print.tout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a tout object — print.tout","text":"","code":"# S3 method for class 'tout' print(x, ...)"},{"path":"https://dtwilson.github.io/tout/reference/print.tout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a tout object — print.tout","text":"x object class tout produced tout_design(). ... arguments passed methods.","code":""},{"path":"https://dtwilson.github.io/tout/reference/tout_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Find optimal sample size and progression criteria — tout_design","title":"Find optimal sample size and progression criteria — tout_design","text":"Given null alternative hypothesis, function finds lowest sample size design optimal progression criteria (determined function opt_pc) satisfies upper constraints three operating characteristics.","code":""},{"path":"https://dtwilson.github.io/tout/reference/tout_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find optimal sample size and progression criteria — tout_design","text":"","code":"tout_design(   rho_0,   rho_1,   alpha_nom,   beta_nom,   gamma_nom = 1,   eta_0 = 0.5,   eta_1 = eta_0,   tau = c(0, 0),   max_n = NULL,   n = NULL,   x = NULL,   sigma = NULL )"},{"path":"https://dtwilson.github.io/tout/reference/tout_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find optimal sample size and progression criteria — tout_design","text":"rho_0 null hypothesis. rho_1 alternative hypothesis. alpha_nom nominal upper constraint alpha. beta_nom nominal upper constraint beta. gamma_nom nominal upper constraint gamma. Defaults 1. eta_0 probability incorrect decision null hypothesis intermediate result. Defaults 0.5. eta_1 probability incorrect decision alternative hypothesis intermediate result. Defaults eta_0. tau two element vector denoting lower upper limits effect adjustment. max_n optional upper limit use search sample sizes. n optional sample size (optimised left unspecified). x optional vector decision thresholds (optimised left unspecified). sigma standard deviation outcome. left unspecified, binary outcome assumed.","code":""},{"path":"https://dtwilson.github.io/tout/reference/tout_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find optimal sample size and progression criteria — tout_design","text":"object class tout, list containing following components: valid boolean indicating nominal constraints met. n sample size. thesholds numeric vector two decision thresholds. alpha attained value operating characteristic alpha. beta attained value operating characteristic beta. gamma attained value operating characteristic gamma.","code":""},{"path":"https://dtwilson.github.io/tout/reference/tout_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find optimal sample size and progression criteria — tout_design","text":"","code":"rho_0 <- 0.5 rho_1 <- 0.7 alpha_nom <- 0.05 beta_nom <- 0.2  tout_design(rho_0, rho_1, alpha_nom, beta_nom) #> Three-outcome design #>  #> Sample size: 37  #> Decision thresholds: 23 23  #>  #> alpha = 0.04943587  #> beta = 0.1929043  #> gamma = 1  #>  #> Hypotheses: 0.5 (null), 0.7 (alternative) #> Modification effect range: 0 0  #> Error probability following an intermediate result: 0.5 0.5   # Allowing for adjustment effects:  tout_design(rho_0, rho_1, alpha_nom, beta_nom, tau = c(0.08, 0.12)) #> Three-outcome design #>  #> Sample size: 145  #> Decision thresholds: 69 82  #>  #> alpha = 0.04819701  #> beta = 0.199825  #> gamma = 0.3574197  #>  #> Hypotheses: 0.5 (null), 0.7 (alternative) #> Modification effect range: 0.08 0.12  #> Error probability following an intermediate result: 0.5 0.5   # Allowing for different error probabilities following a pause decision  tout_design(rho_0, rho_1, alpha_nom, beta_nom, eta_0 = 0.3) #> Three-outcome design #>  #> Sample size: 32  #> Decision thresholds: 19 21  #>  #> alpha = 0.04983493  #> beta = 0.1995952  #> gamma = 0.7427826  #>  #> Hypotheses: 0.5 (null), 0.7 (alternative) #> Modification effect range: 0 0  #> Error probability following an intermediate result: 0.3 0.3   # Designs for continuous outcomes:  tout_design(rho_0 = 0, rho_1 = 0.4, alpha_nom, beta_nom, sigma = 1) #> Three-outcome design #>  #> Sample size: 39  #> Decision thresholds: 1.55615 1.748788  #>  #> alpha = 0.05  #> beta = 0.2  #> gamma = 0.9292477  #>  #> Hypotheses: 0 (null), 0.4 (alternative) #> Standard deviation: 1  #> Modification effect range: 0 0  #> Error probability following an intermediate result: 0.5 0.5"},{"path":[]},{"path":"https://dtwilson.github.io/tout/news/index.html","id":"tout-100","dir":"Changelog","previous_headings":"","what":"tout 1.0.0","title":"tout 1.0.0","text":"First version released CRAN","code":""}]
