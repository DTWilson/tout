---
title: "tout - supplementary material"
author: "Duncan T. Wilson"
format: html
---

## Introduction

This document provides supplementary material to support the manuscript ``Three-outcome designs for external pilot trials
with progression criteria'' by Wilson _et al_. In particular, it will show how the `tout' package can be used to re-create all of the results and plots of the manuscript.

You can install the development version of tout from [GitHub](https://github.com/) with:

``` r
# install.packages("devtools")
devtools::install_github("DTWilson/tout")
```



## Illustrative figures

Sargent sampling distribution illustration:

```{r}
ggplot(data.frame(x = c(-10, 10)), aes(x)) +
  # Null 
  stat_function(fun = dnorm, geom = "line", aes(linetype="a")) +
  stat_function(fun = dnorm, geom = "area", fill = "orange", alpha = 0.4, xlim = c(2, 7)) +
  stat_function(fun = dnorm, geom = "area", fill = "red", alpha = 0.4, xlim = c(1, 2)) +
  
  # Alternative
  stat_function(fun = dnorm, args = list(mean = 2.5), geom = "line", aes(linetype="b")) +
  stat_function(fun = dnorm, args = list(mean = 2.5), 
                geom = "area", fill = "darkgreen", alpha = 0.4, xlim = c(-3, 1)) +
  stat_function(fun = dnorm, args = list(mean = 2.5), 
                geom = "area", fill = "blue", alpha = 0.4, xlim = c(1, 2)) +
  
  geom_label(aes(x = 0.6, y = 0.22, label = "lambda"), parse = T, fill = "red", alpha = 0.4) +
  geom_label(aes(x = 2.4, y = 0.17, label = "delta"), parse = T, fill = "blue", alpha = 0.4) +
  geom_label(aes(x = 0.2, y = 0.1, label = "beta[a]"), parse = T, fill = "darkgreen", alpha = 0.4) +
  geom_label(aes(x = 2.6, y = 0.06, label = "alpha[a]"), parse = T, fill = "orange", alpha = 0.4) +
  
  geom_text(aes(x=1, y=-0.04, label = "x[0]"), parse = T) +
  geom_text(aes(x=2, y=-0.04, label = "x[1]"), parse = T) +
  
  scale_linetype_manual(values = c(1,2), 
                        labels = c(expression(rho[0]), expression(rho[1])), name="") +
  
  xlim(-4, 6.5) + theme_void() + theme(legend.position="bottom")

#ggsave("../paper/figures/Sarg_ocs.pdf", height=4.5, width=14, units="cm")
#ggsave("../paper/figures/Sarg_ocs.eps", height=4.5, width=14, units="cm", device = cairo_ps())
```

Storer sampling distribution illustration:

```{r}
p1 <- ggplot(data.frame(x = c(-10, 10)), aes(x)) +
  # Null 
  stat_function(fun = dnorm, geom = "line", aes(linetype = "a")) +
  stat_function(fun = dnorm, geom = "area", fill = "orange", alpha = 0.4, xlim = c(1, 7)) +
  
  # Alternative
  stat_function(fun = dnorm, args = list(mean = 2.5), geom = "line", aes(linetype = "b")) +
  stat_function(fun = dnorm, args = list(mean = 2.5), 
                geom = "area", fill = "darkgreen", alpha = 0.4, xlim = c(-3, 2)) +
  
  geom_label(aes(x = 0.2, y = 0.12, label = "beta[b]"), parse = T, fill = "darkgreen", alpha = 0.4) +
  geom_label(aes(x = 2.6, y = 0.08, label = "alpha[b]"), parse = T, fill = "orange", alpha = 0.4) +

  geom_text(aes(x=1, y=-0.04, label = "x[0]"), parse = T) +
  geom_text(aes(x=2, y=-0.04, label = "x[1]"), parse = T) +
  
  stat_function(fun = dnorm, geom = "line", aes(linetype = "c"), xlim = c(0,0)) +
  
  scale_linetype_manual(values = c(1, 2, 3), 
                        labels = c(expression(rho[0]), expression(rho[1]),
                                   expression(rho[m])), name="") +
  
  xlim(-4, 6.5) + theme_void() + theme(legend.position="bottom")
```

```{r}
p2 <- ggplot(data.frame(x = c(-10, 10)), aes(x)) +
  # Midpoint
  stat_function(fun = dnorm, args = list(mean = 1.25), geom = "line", linetype=3) +
  stat_function(fun = dnorm, args = list(mean = 1.25), 
                geom = "area", fill = "red", alpha = 0.4, xlim = c(-3, 1)) +
  stat_function(fun = dnorm, args = list(mean = 1.25), 
                geom = "area", fill = "blue", alpha = 0.4, xlim = c(2, 7)) +
  
  geom_label(aes(x = -0.9, y = 0.12, label = "gamma[L]"), parse = T, fill = "red", alpha = 0.4) +
  geom_label(aes(x = 3.4, y = 0.12, label = "gamma[U]"), parse = T, fill = "blue", alpha = 0.4) +
  xlim(-4, 6.5) + theme_void()
```

```{r}
library(patchwork)

p2/p1

#ggsave("../paper/figures/Stor_ocs.pdf", height=8, width=14, units="cm")
#ggsave("../paper/figures/Stor_ocs.eps", height=8, width=14, units="cm", device = cairo_ps())
```